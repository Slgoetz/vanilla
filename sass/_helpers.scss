// ---------------------------------------------
// font sizing
// ---------------------------------------------
@function rem($pixels, $context: $base-size) {
   @return math.div($pixels, $context) * 1rem;
}

// ---------------------------------------------
// padding
// ---------------------------------------------
@function pad($count) {
   @return calc(8px * #{$count});
}

//===============================================================/
//  Break Point Helpers
//===============================================================/

.hide-on-mobile {
   @media #{$tablet-portrait} {
      display: none !important;
   }

   @media #{$phone} {
      display: none !important;
   }
}

.hide-on-tablet {
   @media #{$tablet} {
      display: none !important;
   }
}

.hide-on-phone {
   @media #{$phone} {
      display: none !important;
   }
}

.only-on-mobile {
   display: none !important;

   @media #{$tablet-portrait} {
      display: block !important;
   }

   @media #{$phone} {
      display: block !important;
   }
}

.only-on-phone {
   display: none !important;

   @media #{$phone} {
      display: block !important;
   }
}

//===============================================================/
//  Visible Helpers
//===============================================================/

.hidden {
   display: none !important;
}

.noscroll {
   overflow: hidden;
}


//===============================================================/
//  Margin Helpers
//===============================================================/
@for $i from 1 through 20 {
   .mt#{$i} {
      margin-top: $gridSize * $i;
   }

   .mb#{$i} {
      margin-bottom: $gridSize * $i;
   }

   .pt#{$i} {
      padding-top: $gridSize * $i;
   }

   .pb#{$i} {
      padding-bottom: $gridSize * $i;
   }
}

//===============================================================/
//  Grid Helpers
//===============================================================/

@mixin ml($col, $gut, $outGut: 0) {
   margin-left: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));

   @media #{$phone} {
      margin-left: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
   }
}

@mixin mr($col, $gut, $outGut: 0) {
   margin-right: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));

   @media #{$phone} {
      margin-right: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
   }
}

@mixin ml-mr($col, $gut, $outGut: 0) {
   margin-left: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));
   margin-right: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));

   @media #{$phone} {
      margin-left: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
      margin-right: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
   }
}

@mixin my($gap: $gridSize) {
   margin-top: pad($gap);
   margin-bottom: pad($gap);
}

@mixin pl($col, $gut, $outGut: 0) {
   padding-left: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));

   @media #{$phone} {
      padding-left: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
   }
}

@mixin pr($col, $gut, $outGut: 0) {
   padding-right: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));

   @media #{$phone} {
      padding-right: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
   }
}

@mixin pl-pr($col, $gut, $outGut: 0) {
   padding-left: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));
   padding-right: (($column * $col) + ($gutter * $gut) + ($outerGutter * $outGut));

   @media #{$phone} {
      padding-left: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
      padding-right: (($phoneColumn * $col) + ($phoneGutter * $gut) + ($phoneOuterGutter * $outGut));
   }
}

@mixin py($gap: $gridSize) {
   padding-top: pad($gap);
   padding-bottom: pad($gap);
}


@mixin width($columnnum, $gutternum, $outGut: 0) {
   width: (($columnnum * $column) + ($gutternum * $gutter) + ($outerGutter * $outGut));

   @media #{$phone} {
      width: (($columnnum * $phoneColumn) + ($gutternum * $phoneGutter) + ($phoneOuterGutter * $outGut));
   }
}